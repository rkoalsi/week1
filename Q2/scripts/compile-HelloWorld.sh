#!/bin/bash

# changing directories to contracts/circuits
cd contracts/circuits

# creating a directory called HelloWorld
mkdir HelloWorld

# checking if powersOfTau exists and skips it if it does otherwise downloads it if it doesn't
if [ -f ./powersOfTau28_hez_final_10.ptau ]; then
    echo "powersOfTau28_hez_final_10.ptau already exists. Skipping."
else
    echo 'Downloading powersOfTau28_hez_final_10.ptau'
    wget https://hermez.s3-eu-west-1.amazonaws.com/powersOfTau28_hez_final_10.ptau
fi

echo "Compiling HelloWorld.circom..."

# compile circuit in two steps

# First, we tell circom to generate a Rank 1 Constraint System, Web Assembly file and witness in symbol format and place them in HelloWorld directory
circom HelloWorld.circom --r1cs --wasm --sym -o HelloWorld

# Secondly, we print the statistics of the circuit generated by the previous command
snarkjs r1cs info HelloWorld/HelloWorld.r1cs

# Start a new zkey using the groth16 setup command in snarkjs
snarkjs groth16 setup HelloWorld/HelloWorld.r1cs powersOfTau28_hez_final_10.ptau HelloWorld/circuit_0000.zkey

# Making a random entropy contribution as a Phase 2 trusted setup
snarkjs zkey contribute HelloWorld/circuit_0000.zkey HelloWorld/circuit_final.zkey --name="1st Contributor Name" -v -e="random text"

# Exporting verificationkey 
snarkjs zkey export verificationkey HelloWorld/circuit_final.zkey HelloWorld/verification_key.json

# generate solidity contract
snarkjs zkey export solidityverifier HelloWorld/circuit_final.zkey ../HelloWorldVerifier.sol

cd ../..